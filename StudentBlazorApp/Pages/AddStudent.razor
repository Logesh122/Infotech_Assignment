@page "/addstudent"
@using StudentBlazorApp.Model
@using StudentBlazorApp.Services
@inject StudentService StudentService
@inject NavigationManager Navigation

<h3>Add Student</h3>

<EditForm Model="@newStudent" OnValidSubmit="AddStudents">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name</label>
        <InputText id="name" class="form-control" @bind-Value="newStudent.Name" />
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="newStudent.Email" />
    </div>
    <div class="form-group">
        <label for="address">Address</label>
        <InputText id="address" class="form-control" @bind-Value="newStudent.Address" />
    </div>
    <div class="form-group">
        <label for="phone">Phone Number</label>
        <InputText id="phone" class="form-control" @bind-Value="newStudent.PhoneNumber" />
    </div>
    <br />
    <div class="form-group form-check">
        <label class="form-check-label" for="IsActive">Is Active</label>
        <InputCheckbox id="IsActive" class="form-check-input" @bind-Value="newStudent.IsActive" />
    </div>
    <br />
    <button type="submit" class="btn btn-success">Save</button>
    <button type="button" class="btn btn-secondary" @onclick="CancelAddStudent">Cancel</button>
</EditForm>

@code {
    private Students newStudent = new Students();

    private async Task AddStudents()
    {
        await StudentService.AddStudentAsync(newStudent);
        Navigation.NavigateTo("/students"); // Redirect to the student list page after adding
    }

    private void CancelAddStudent()
    {
        Navigation.NavigateTo("/students");
    }
}
